{"version":3,"sources":["./src/app/image-list/image-list.component.ts","./src/environments/environment.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/imagesearch.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-imagelist',\n  template: `<p>Search for your images</p>`,\n  styleUrls: ['./image-list.component.css']\n})\nexport class ImageListComponent implements OnInit {\n\n  constructor() { }\n  images : object;\n  error:any;\n  ngOnInit(): void {}\n\n/*  public searchImages(query:string){\n     this._imageService.getImage(query).subscribe(data => this.images=data,\n                                                    err=> this.error=err,\n                                                     ()=> console.log(\"Request Complete!\"));\n  }\n  */\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  PIXABAY_API_KEY: '18206582-9f21061e89102bf9ca644519e',\n  PIXABAY_API_URL: 'https://pixabay.com/api?key='\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ImagesearchService } from '../imagesearch.service';\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  \n  addvalue: boolean = false;\n  query: string;\n  images: any = [];\n  imagesFound: boolean = false;\n  searching: boolean = false;\n  page: number = 1;\n  pagenourl: string = '&page='+this.page\n\n  constructor(private _imageService:ImagesearchService){}\n  \n  handleSuccess(data){\n\n      this.images.push(...data.hits);\n   // this.images = [...data.hits];\n    this.imagesFound = true;    \n    console.log(data.hits);\n    console.log(this.images);\n  }\n  \n  previousPage(){\n    if(this.page!=1){\n      this.page--;\n      this.pagenourl='&page='+this.page;\n      this.SearchImages(this.query);\n    }\n  }\n\n  nextPage(){\n    this.page++;\n    this.pagenourl='&page='+this.page;\n    this.SearchImages(this.query);\n  }\n\n  handleError(error){\n    console.log(error);\n  }\n\n  SearchImages(query){\n    if(query==''){\n      this.addvalue=true;\n    }\n    else\n    {    \n    this.searching = true;\n    this.query=query;\n    return this._imageService.getImage(encodeURIComponent(query)+this.pagenourl).subscribe(\n      data => this.handleSuccess(data),\n      error => this.handleError(error),\n      () => this.searching = false\n    )\n    }\n  }\n  \n\n \n  ngOnInit(): void {\n  }\n  \n}\n","<mat-card>\n    <mat-form-field>\n    <input matInput #searchquery placeholder=\"Search for images\"class=\"search\">\n    </mat-form-field>\n    <br>\n    <button (click)=\"SearchImages(searchquery.value)\"\n      mat-raised-button class=\"searchButton\" type=\"button\">Find Images</button>\n  <!--  <button *ngIf=\"imagesFound\"(click)=\"nextPage()\" mat-raised-button class=\"searchButton\">Next Page</button>\n    <button *ngIf=\"this.page>1\" (click)=\"previousPage()\" mat-raised-button class=\"searchButton\">previous Page</button> -->\n    <div *ngIf=\"addvalue\">Enter an item to search</div>\n</mat-card>\n  \n  <div *ngIf=\"searching\">\n    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n<mat-card *ngIf=\"imagesFound\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollThrottle]=\"3000\"\n      (scrolled)=\"nextPage()\">\n    <h4 *ngIf=\"imagesFound\" mat-subeader>Results</h4>\n    <ngx-masonry>\n      <div ngxMasonryItem *ngFor=\"let image of images\" class=\"image-container\">\n        <mat-card>\n          <a href=\"{{ image.pageURL }}\" target=\"_blank\">\n            <mat-card-header>\n              <div class=\"avatar\" mat-card-avatar [ngStyle]=\"{'background-image':'url('+ image.userImageURL +')', 'background-size':'40px 40px'}\"></div>\n              <mat-card-title>{{'@'+ image.user }}</mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"{{image.webformatURL}}\">\n            <mat-card-content>\n              <p>Tags: {{ image.tags }}</p>\n              <p>Comments: {{ image.comments }}</p>\n              <p>Likes: {{ image.likes }}</p>\n            </mat-card-content>\n          </a>\n        </mat-card>\n      </div>\n    </ngx-masonry>\n  </mat-card>    ","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesearchService {\n  private query: string;\n  private API_KEY: string = environment.PIXABAY_API_KEY;\n  private API_URL: string = environment.PIXABAY_API_URL;\n  private URL: string = this.API_URL + this.API_KEY + '&q=';\n  private perPage: string = \"&per_page=10\";\n\n  constructor(private _http : HttpClient) {  }\n\n  getImage(query){\n    return this._http.get(this.URL+query+this.perPage)\n                .catch(this.httpErrorResponse);\n                \n  }\n\n  httpErrorResponse(error: HttpErrorResponse){\n      return Observable.throw(error.message || \"Server Error\");\n      \n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'image-search';\n}\n","<div class=\"container\">\n    <div class=\"main-content\">\n      <div class=\"header\">\n        <span id=\"title\"> {{ title }} </span>\n        <div class=\"logo\">\n          <div id=\"attribution\">All images provided by</div>\n          <a href=\"https://pixabay.com\" target=\"_blank\">\n            <img src= \"./assets/img/logo.png\" class=\"pixabayLogo\">\n          </a>\n        </div>\n      </div>\n        <app-imagelist></app-imagelist>\n        <app-test></app-test>\n    </div>\n</div>    ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { TestComponent } from './test/test.component';\n\nimport { InfiniteScrollModule }  from 'ngx-infinite-scroll';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ImagesearchService } from './imagesearch.service';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { MaterialModule } from './material/material.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageListComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgxMasonryModule,\n    MaterialModule,\n    InfiniteScrollModule\n  ],\n  providers: [ImagesearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDividerModule } from '@angular/material/divider';\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatCardModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatProgressSpinnerModule,\n  MatDividerModule\n];\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}